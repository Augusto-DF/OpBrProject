[{"C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\index.js":"1","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\App.js":"2","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Home\\Home.js":"3","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\ChampsAnalytics.js":"4","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\ChampsArea.js":"5","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Contexts\\ChampsContext.js":"6","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\ChampDetails.js":"7","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\Cards\\ChampCard_Medium.js":"8","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\API\\api.js":"9","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\Menus\\MenuChampDetails.js":"10","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\Cards\\SkillCard.js":"11","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\Cards\\PassiveCard.js":"12"},{"size":220,"mtime":1611608416039,"results":"13","hashOfConfig":"14"},{"size":577,"mtime":1612189841621,"results":"15","hashOfConfig":"14"},{"size":107,"mtime":1611695298534,"results":"16","hashOfConfig":"14"},{"size":285,"mtime":1612189841624,"results":"17","hashOfConfig":"14"},{"size":1502,"mtime":1612191542502,"results":"18","hashOfConfig":"14"},{"size":912,"mtime":1612189841627,"results":"19","hashOfConfig":"14"},{"size":1160,"mtime":1612640443435,"results":"20","hashOfConfig":"14"},{"size":586,"mtime":1612189841622,"results":"21","hashOfConfig":"14"},{"size":673,"mtime":1612190314028,"results":"22","hashOfConfig":"14"},{"size":5388,"mtime":1612436206193,"results":"23","hashOfConfig":"14"},{"size":1218,"mtime":1612364372404,"results":"24","hashOfConfig":"14"},{"size":135,"mtime":1612213975816,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"200dvp",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\index.js",[],["55","56"],"C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\App.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Home\\Home.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\ChampsAnalytics.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\ChampsArea.js",["57","58"],"import React from 'react';\r\nimport { ChampsContext } from '../../Contexts/ChampsContext';\r\nimport ChampCard_Medium from './Cards/ChampCard_Medium';\r\nimport ChampDetails from './ChampDetails';\r\nimport { GET_CHAMP } from '../../API/api';\r\n\r\nconst URL_IMG = 'http://ddragon.leagueoflegends.com/cdn/img/champion/loading';\r\n\r\nconst ChampsArea = () => {\r\n  const { dataChamps, champDetails, setChampDetails } = React.useContext(\r\n    ChampsContext,\r\n  );\r\n\r\n  const [champTarget, setChampTarget] = React.useState(null);\r\n\r\n  async function choosedChamp() {\r\n    const { url, options } = GET_CHAMP(champTarget);\r\n    const response = await fetch(url, options);\r\n    const json = await response.json();\r\n    setChampDetails(json);\r\n    return true;\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (champTarget) choosedChamp();\r\n  }, [champTarget]);\r\n\r\n  return (\r\n    <div>\r\n      {champDetails ? (\r\n        <ChampDetails />\r\n      ) : dataChamps ? (\r\n        dataChamps.map((champ, count) => {\r\n          return (\r\n            <ChampCard_Medium\r\n              key={count}\r\n              id={champ[0].id}\r\n              name={champ[0].name}\r\n              title={champ[0].title}\r\n              imgPath={URL_IMG + '/' + champ[0].id + '_0.jpg'}\r\n              imgAlt={'Splash do(a) ' + champ[0].id}\r\n              onClick={async () => {\r\n                setChampTarget(champ[0].id);\r\n              }}\r\n            />\r\n          );\r\n        })\r\n      ) : undefined}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChampsArea;\r\n","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Contexts\\ChampsContext.js",["59","60"],"import React from 'react';\r\nimport { GET_CHAMPS, GET_CHAMP } from '../API/api';\r\n\r\nexport const ChampsContext = React.createContext();\r\n\r\n/**\r\n * @returns [Array] - Retorna uma lista com todos os campeões do jogo.\r\n */\r\nasync function listChamps() {\r\n  const { url, options } = GET_CHAMPS();\r\n  const response = await fetch(url, options);\r\n  const json = await response.json();\r\n\r\n  let array = [];\r\n  for (let i in json.data) array.push([json.data[i]]);\r\n\r\n  return array;\r\n}\r\n\r\nexport const ChampStorage = ({ children }) => {\r\n  const [dataChamps, setDataChamps] = React.useState(null);\r\n  const [champDetails, setChampDetails] = React.useState(null);\r\n\r\n  React.useEffect(async () => {\r\n    setDataChamps(await listChamps());\r\n  }, []);\r\n\r\n  return (\r\n    <ChampsContext.Provider\r\n      value={{ dataChamps, setChampDetails, champDetails }}\r\n    >\r\n      {children}\r\n    </ChampsContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\ChampDetails.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\Cards\\ChampCard_Medium.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\API\\api.js",["61","62"],"const URL_SERVER = 'https://br1.api.riotgames.com';\r\nconst URL_DATA_CHAMPS =\r\n  'http://ddragon.leagueoflegends.com/cdn/11.2.1/data/pt_BR/champion.json';\r\nconst URL_ASSET_LOADING_CHAMP =\r\n  'http://ddragon.leagueoflegends.com/cdn/11.2.1/data/pt_BR/champion/';\r\nconst URL_ITENS =\r\n  'http://ddragon.leagueoflegends.com/cdn/11.2.1/data/pt_BR/item.json';\r\n\r\nexport function GET_CHAMPS() {\r\n  return {\r\n    url: URL_DATA_CHAMPS,\r\n    options: {\r\n      method: 'GET',\r\n      headers: {},\r\n    },\r\n  };\r\n}\r\nexport function GET_CHAMP(_id) {\r\n  return {\r\n    url: URL_ASSET_LOADING_CHAMP + _id + '.json',\r\n    options: {\r\n      method: 'GET',\r\n      headers: {},\r\n    },\r\n  };\r\n}\r\n","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\Menus\\MenuChampDetails.js",["63"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PassiveCard from '../Cards/PassiveCard';\r\nimport SkillCard from '../Cards/SkillCard';\r\nimport './MenuChampDetails.css';\r\n\r\nconst URL_CHAMPION_ABILITY_ASSETS =\r\n  'http://ddragon.leagueoflegends.com/cdn/11.2.1/img/spell';\r\n\r\nconst MenuChampDetails = ({ stats, spells, passive }) => {\r\n  const [option, setOpition] = React.useState('status');\r\n  const [optionContent, setOptionContent] = React.useState(null);\r\n  console.log(spells);\r\n\r\n  React.useEffect(() => {\r\n    switch (option) {\r\n      case 'status':\r\n        setOptionContent(\r\n          <>\r\n            <p>Armadura: {stats.armor}</p>\r\n            <p>Armadura por level: {stats.armorperlevel}</p>\r\n            <p>Dano físico: {stats.attackdamage}</p>\r\n            <p>Dano físico por level: {stats.attackdamageperlevel}</p>\r\n            <p>Alcance: {stats.attackrange}</p>\r\n            <p>Velocidade de ataque: {stats.attackspeed}</p>\r\n            <p>Velocidade de ataque por level: {stats.attackspeedperlevel}</p>\r\n            <p>Chance de acerto crítico: {stats.crit}</p>\r\n            <p>Chance de acerto crítico por level: {stats.critperlevel}</p>\r\n            <p>Vida: {stats.hp}</p>\r\n            <p>Vida por level: {stats.hpperlevel}</p>\r\n            <p>Regeneração de vida (/s): {stats.hpregen}</p>\r\n            <p>Regeneração de vida por level: {stats.hpregenperlevel}</p>\r\n            <p>Velocidade de movivmento: {stats.movespeed}</p>\r\n            <p>Mana: {stats.mp}</p>\r\n            <p>Mana por level: {stats.mpperlevel}</p>\r\n            <p>Regeneração de mana (/s): {stats.mpregen}</p>\r\n            <p>Regeneração de mana por level: {stats.mpregenperlevel}</p>\r\n            <p>Resistencia mágica: {stats.spellblock}</p>\r\n            <p>Resistencia mágica por level: {stats.spellblockperlevel}</p>\r\n          </>,\r\n        );\r\n        break;\r\n      case 'skills':\r\n        setOptionContent(\r\n          <div>\r\n            <PassiveCard passive={passive} />\r\n            {spells.map((spell, count) => {\r\n              return (\r\n                <SkillCard\r\n                  key={count}\r\n                  spell={spell}\r\n                  spellId={spell.id}\r\n                  spellName={spell.name}\r\n                  spellDescription={spell.description}\r\n                  spellTooltip={spell.tooltip}\r\n                  spellImgPath={\r\n                    URL_CHAMPION_ABILITY_ASSETS + '/' + spell.image.full\r\n                  }\r\n                  spellCostArray={spell.cost}\r\n                  spellRangeArray={spell.range}\r\n                />\r\n              );\r\n            })}\r\n          </div>,\r\n        );\r\n        break;\r\n      case 'lore':\r\n        setOptionContent('');\r\n        break;\r\n      case 'skins':\r\n        setOptionContent('');\r\n        break;\r\n\r\n      default:\r\n        setOptionContent(\r\n          <div>\r\n            <p>Armadura: {stats.armor}</p>\r\n            <p>Armadura por level: {stats.armorperlevel}</p>\r\n            <p>Dano físico: {stats.attackdamage}</p>\r\n            <p>Dano físico por level: {stats.attackdamageperlevel}</p>\r\n            <p>Alcance: {stats.attackrange}</p>\r\n            <p>Velocidade de ataque: {stats.attackspeed}</p>\r\n            <p>Velocidade de ataque por level: {stats.attackspeedperlevel}</p>\r\n            <p>Chance de acerto crítico: {stats.crit}</p>\r\n            <p>Chance de acerto crítico por level: {stats.critperlevel}</p>\r\n            <p>Vida: {stats.hp}</p>\r\n            <p>Vida por level: {stats.hpperlevel}</p>\r\n            <p>Regeneração de vida (/s): {stats.hpregen}</p>\r\n            <p>Regeneração de vida por level: {stats.hpregenperlevel}</p>\r\n            <p>Velocidade de movivmento: {stats.movespeed}</p>\r\n            <p>Mana: {stats.mp}</p>\r\n            <p>Mana por level: {stats.mpperlevel}</p>\r\n            <p>Regeneração de mana (/s): {stats.mpregen}</p>\r\n            <p>Regeneração de mana por level: {stats.mpregenperlevel}</p>\r\n            <p>Resistencia mágica: {stats.spellblock}</p>\r\n            <p>Resistencia mágica por level: {stats.spellblockperlevel}</p>\r\n          </div>,\r\n        );\r\n        break;\r\n    }\r\n  }, [option]);\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul className=\"menu\">\r\n          <Link\r\n            className={option === 'status' ? 'marked' : ''}\r\n            to={'./'}\r\n            onClick={() => {\r\n              setOpition('status');\r\n            }}\r\n          >\r\n            <li>Status base</li>\r\n          </Link>\r\n          <Link\r\n            className={option === 'skills' ? 'marked' : ''}\r\n            to={'./'}\r\n            onClick={() => {\r\n              setOpition('skills');\r\n            }}\r\n          >\r\n            <li>Habilidades</li>\r\n          </Link>\r\n          <Link\r\n            className={option === 'lore' ? 'marked' : ''}\r\n            to={'./'}\r\n            onClick={() => {\r\n              setOpition('lore');\r\n            }}\r\n          >\r\n            <li>História</li>\r\n          </Link>\r\n          <Link\r\n            className={option === 'skins' ? 'marked' : ''}\r\n            to={'./'}\r\n            onClick={() => {\r\n              setOpition('skins');\r\n            }}\r\n          >\r\n            <li>Skins</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n      <div>{optionContent ? optionContent : undefined}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuChampDetails;\r\n","C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\Cards\\SkillCard.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\OpBrProject\\opbr\\src\\Components\\Champs\\Cards\\PassiveCard.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":26,"column":6,"nodeType":"70","endLine":26,"endColumn":19,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":35,"column":13,"nodeType":"74","endLine":45,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":2,"column":22,"nodeType":"77","messageId":"78","endLine":2,"endColumn":31},{"ruleId":"68","severity":1,"message":"79","line":24,"column":19,"nodeType":"80","endLine":26,"endColumn":4},{"ruleId":"75","severity":1,"message":"81","line":1,"column":7,"nodeType":"77","messageId":"78","endLine":1,"endColumn":17},{"ruleId":"75","severity":1,"message":"82","line":6,"column":7,"nodeType":"77","messageId":"78","endLine":6,"endColumn":16},{"ruleId":"68","severity":1,"message":"83","line":101,"column":6,"nodeType":"70","endLine":101,"endColumn":14,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'choosedChamp'. Either include it or remove the dependency array.","ArrayExpression",["87"],"react/jsx-pascal-case","Imported JSX component ChampCard_Medium must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'GET_CHAMP' is defined but never used.","Identifier","unusedVar","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'URL_SERVER' is assigned a value but never used.","'URL_ITENS' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'passive', 'spells', 'stats.armor', 'stats.armorperlevel', 'stats.attackdamage', 'stats.attackdamageperlevel', 'stats.attackrange', 'stats.attackspeed', 'stats.attackspeedperlevel', 'stats.crit', 'stats.critperlevel', 'stats.hp', 'stats.hpperlevel', 'stats.hpregen', 'stats.hpregenperlevel', 'stats.movespeed', 'stats.mp', 'stats.mpperlevel', 'stats.mpregen', 'stats.mpregenperlevel', 'stats.spellblock', and 'stats.spellblockperlevel'. Either include them or remove the dependency array. If 'setOptionContent' needs the current value of 'stats.armor', you can also switch to useReducer instead of useState and read 'stats.armor' in the reducer.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [champTarget, choosedChamp]",{"range":"93","text":"94"},"Update the dependencies array to be: [option, passive, spells, stats.armor, stats.armorperlevel, stats.attackdamage, stats.attackdamageperlevel, stats.attackrange, stats.attackspeed, stats.attackspeedperlevel, stats.crit, stats.critperlevel, stats.hp, stats.hpperlevel, stats.hpregen, stats.hpregenperlevel, stats.movespeed, stats.mp, stats.mpperlevel, stats.mpregen, stats.mpregenperlevel, stats.spellblock, stats.spellblockperlevel]",{"range":"95","text":"96"},[819,832],"[champTarget, choosedChamp]",[4144,4152],"[option, passive, spells, stats.armor, stats.armorperlevel, stats.attackdamage, stats.attackdamageperlevel, stats.attackrange, stats.attackspeed, stats.attackspeedperlevel, stats.crit, stats.critperlevel, stats.hp, stats.hpperlevel, stats.hpregen, stats.hpregenperlevel, stats.movespeed, stats.mp, stats.mpperlevel, stats.mpregen, stats.mpregenperlevel, stats.spellblock, stats.spellblockperlevel]"]